#pragma once
// DO NOT INCLUDE THIS HEADER!
// This header is EXPLICITLY only for very internal implementations of the pydia library!
#include <Python.h>
//
#include "pydia_symbol.h"

PyObject* PyDiaSymbol_FromSymbol(dia::Symbol&& symbol);

Py_hash_t PyDiaSymbol_hash(PyObject* self);
PyObject* PyDiaSymbol_richcompare(PyObject* self, PyObject* other, int op);

PyObject* PyDiaSymbol_is_volatile(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_length(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_sym_index_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_scoped(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_class_parent_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_volatile(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_length(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_access(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_address_offset(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_address_section(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_address_taken(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_age(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_array_index_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_array_index_type_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_backend_build(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_backend_major(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_backend_minor(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_backend_qfe(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_base_data_offset(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_base_data_slot(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_base_symbol(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_base_symbol_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_base_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_bind_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_bind_slot(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_code(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_coff_group(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_compiler_generated(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_compiler_name(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_const_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_constant_export(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_constructor(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_container(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_count(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_count_live_ranges(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_custom_calling_convention(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_data_bytes(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_data_export(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_data_kind(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_edit_and_continue_enabled(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_exception_handler_address_offset(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_exception_handler_address_section(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_exception_handler_relative_virtual_address(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_exception_handler_virtual_address(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_export_with_explicit_ordinal(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_export_forwarder(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_far_return(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_final_live_static_size(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_frame_pointer_present(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_frame_size(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_front_end_build(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_front_end_major(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_front_end_minor(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_front_end_qfe(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_function(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_guid(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_alloca(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_assignment_operator(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_cast_operator(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_control_flow_check(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_debug_info(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_eh(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_eha(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_inline_asm(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_long_jump(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_managed_code(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_nested_types(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_seh(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_security_checks(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_set_jump(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_has_valid_pgo_counts(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_hfa_double(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_hfa_float(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_indirect_virtual_base_class(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_inl_spec(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_interrupt_return(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_intrinsic(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_intro(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_accelerator_group_shared_local(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_accelerator_pointer_tag_live_range(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_accelerator_stub_function(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_aggregated(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_ctypes(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_cvtcil(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_constructor_virtual_base(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_cxx_return_udt(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_data_aligned(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_hlsl_data(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_hotpatchable(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_interface_udt(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_ltcg(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_location_control_flow_dependent(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_msil_netmodule(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_matrix_row_major(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_multiple_inheritance(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_naked(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_optimized_away(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_optimized_for_speed(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_pgo(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_pointer_based_on_symbol_value(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_pointer_to_data_member(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_pointer_to_member_function(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_ref_udt(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_return_value(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_safe_buffers(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_sdl(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_single_inheritance(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_splitted(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_static(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_stripped(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_value_udt(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_virtual_inheritance(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_is_winrt_pointer(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_language(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_length(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_lexical_parent(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_lexical_parent_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_library_name(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_live_range_length(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_live_range_start_address_offset(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_live_range_start_address_section(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_live_range_start_relative_virtual_address(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_local_base_pointer_register_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_location_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_lower_bound(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_lower_bound_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_machine_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_managed(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_memory_space_kind(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_modifier_values(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_msil(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_name(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_nested(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_no_inline(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_no_name_export(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_no_return(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_no_stack_ordering(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_not_reached(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_number_of_accelerator_pointer_tags(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_number_of_columns(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_number_of_modifiers(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_number_of_register_indices(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_number_of_rows(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_numeric_properties(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_object_file_name(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_object_pointer_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_oem_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_oem_symbol_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_offset(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_offset_in_udt(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_optimized_code_debug_info(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_ordinal(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_overloaded_operator(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_pgo_dynamic_instruction_count(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_pgo_edge_count(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_pgo_entry_count(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_packed(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_param_base_pointer_register_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_phase_name(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_platform(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_private_export(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_pure(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_r_value_reference(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_rank(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_reference(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_register_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_register_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_relative_virtual_address(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_restricted_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_sampler_slot(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_scoped(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_sealed(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_signature(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_size_in_udt(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_slot(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_source_file_name(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_src_line_on_type_defn(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_static_size(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_strict_gs_check(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_stride(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_sub_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_sub_type_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_sym_index_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_sym_tag(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_symbols_file_name(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_target_offset(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_target_relative_virtual_address(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_target_section(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_target_virtual_address(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_texture_slot(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_this_adjust(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_thunk_ordinal(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_time_stamp(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_token(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_type_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_type_ids(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_types(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_uav_slot(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_udt_kind(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_unaligned_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_undecorated_name(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_undecorated_name_ex(const PyDiaSymbol* self, DWORD options);
PyObject* PyDiaSymbol_unmodified_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_unmodified_type_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_unused(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_upper_bound(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_upper_bound_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_value(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_virtual(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_virtual_address(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_virtual_base_class(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_virtual_base_disp_index(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_virtual_base_offset(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_virtual_base_pointer_offset(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_virtual_base_table_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_virtual_table_shape(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_virtual_table_shape_id(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_volatile_type(const PyDiaSymbol* self);
PyObject* PyDiaSymbol_was_inlined(const PyDiaSymbol* self);
